{
  "name": "flutter-utils",
  "displayName": "Flutter Toolkit",
  "publisher": "AdrienAudouard",
  "description": "Generate toString, equatable, copyWith, constructor, JsonSerializable methods, sync tests folders and many more",
  "bugs": "https://github.com/AdrienAudouard/flutter-utils/issues",
  "homepage": "https://github.com/AdrienAudouard/flutter-utils",
  "repository": "https://github.com/AdrienAudouard/flutter-utils",
  "version": "2.1.1",
  "engines": {
    "vscode": "^1.52.0"
  },
  "license": "LICENSE",
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "flutter",
    "utils",
    "test",
    "dart",
    "clean code",
    "dart",
    "generate",
    "copyWith",
    "equatable",
    "jsonSerializable",
    "json",
    "tdd",
    "test driven development",
    "unit tests",
    "widget test",
    "monorepo",
    "melo",
    "nx",
    "testing"
  ],
  "icon": "assets/icon.png",
  "main": "./dist/extension.js",
  "activationEvents": [
    "onLanguage:dart"
  ],
  "contributes": {
    "commands": [
      {
        "command": "flutter-toolkit.goTestFile",
        "title": "Open test file"
      },
      {
        "command": "flutter-toolkit.goSourceFile",
        "title": "Open source file"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "flutter-toolkit.goTestFile",
          "when": "resourceLangId == dart && resourceFilename =~ /(?<!_test)\\.dart/"
        },
        {
          "command": "flutter-toolkit.goSourceFile",
          "when": "resourceLangId == dart && resourceFilename =~ /_test.dart/"
        }
      ],
      "editor/title": [
        {
          "command": "flutter-toolkit.goTestFile",
          "group": "navigation",
          "when": "resourceLangId == dart && resourceFilename =~ /(?<!_test)\\.dart/"
        },
        {
          "command": "flutter-toolkit.goSourceFile",
          "group": "navigation",
          "when": "resourceLangId == dart && resourceFilename =~ /_test.dart/"
        }
      ]
    },
    "configuration": {
      "title": "Flutter Toolkit",
      "properties": {
        "flutter-toolkit.testFileFolder": {
          "type": "string",
          "default": "",
          "description": "Folder who contains the test inside /test"
        },
        "flutter-toolkit.closestFileMinPercentage": {
          "type": "number",
          "default": "0.80",
          "description": "When the test file is not found, the extension will made some suggestion by searching the closest search test file with a score above this settings (0.8 by default and must be between 0 and 1)"
        },
        "flutter-toolkit.quickFixes.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable quick fixes (generate equatable and copyWith methods)"
        },
        "flutter-toolkit.quickFixes.copyWithConstructor": {
          "type": "boolean",
          "default": true,
          "description": "Automatically generate a default constructor when generating the copyWith method."
        },
        "flutter-toolkit.suggestions.renameTestFile": {
          "type": "boolean",
          "default": true,
          "description": "Enable test file rename suggestion. When no test file are found for the file opened, the extension will try to find test files that might match and will ask you if you want to rename it with the correct name."
        },
        "flutter-toolkit.codeLens.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable code lens feature"
        },
        "flutter-toolkit.codeLens.testFunctions": {
          "type": "array",
          "default": [
            "test",
            "blocTest",
            "testWidgets"
          ],
          "description": "Functions that should be considered as test functions (test, blocTest, testWidgets, patrolTest by default)"
        },
        "flutter-toolkit.synchronisation.onRename": {
          "type": "string",
          "enum": [
            "Always",
            "Ask",
            "Never"
          ],
          "default": "Ask",
          "description": "Synchronise the test files with the source files. When a source file is moved or renamed the test file will be renamed and moved to follow the same folder structure and name."
        }
      }
    }
  },
  "capabilities": {
    "codeLensProvider": {
      "resolveProvider": "true"
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "publish": "vsce publish",
    "postpublish": "VERSION=`npm pkg get version | sed 's/\"//g'` && git tag $VERSION && sentry-cli releases new $VERSION && sentry-cli releases files $VERSION upload-sourcemaps ./dist"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/mock-fs": "^4.13.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "mock-fs": "^5.2.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "dependencies": {
    "@opentelemetry/instrumentation": "^0.35.1",
    "@sentry/node": "^7.41.0",
    "@sentry/tracing": "^7.41.0",
    "@sentry/types": "^7.41.0",
    "node-fetch": "^3.3.0",
    "sinon": "^15.0.1",
    "string-similarity": "^4.0.4",
    "uuid": "^9.0.0"
  }
}
